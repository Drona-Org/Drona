{
    "Machine": {
        "prefix": "machine",
        "body": [
            "machine ${1:MachineName}",
            "{",
            "    // fields",
            "    // states",
            "    start state ${2:StateName}",
            "    {",
            "        entry",
            "        {",
            "            $0",
            "        }",
            "    }",
            "}"
        ],
        "description": "Machine"
    },
    "State": {
        "prefix": "state",
        "body": [
            "state ${1:name} {",
            "    entry {",
            "        $0",
            "    }",
            "}"
        ],
        "description": "State"
    },
    "On Event Goto": {
        "prefix": "on",
        "body": [
            "on ${1:EventName} goto ${2:StateName};"
        ],
        "description": "On Event Goto"
    },
    "On Event Goto With": {
        "prefix": "on",
        "body": [
            "on ${1:EventName} goto ${2:StateName} with {",
            "    $0",
            "}"
        ],
        "description": "On Event Goto With"
    },
    "On Event Push": {
        "prefix": "on",
        "body": [
            "on ${1:EventName} push ${2:StateName};"
        ],
        "description": "On Event Push"
    },
    "On Event Do": {
        "prefix": "on",
        "body": [
            "on ${1:EventName} do",
            "{",
                "$0",
            "}"
        ],
        "description": "On Event Do"
    },
    "Module": {
        "prefix": "module",
        "body": [
            "module ${1:name}",
            "= ${2:moduleExpr}"
        ],
        "description": "Module"
    },
    "Declare Event": {
        "prefix": "event",
        "body":[
            "event ${1:event} : ${2:type};"
        ],
        "description": "Declare Event"
    },
    "Spec": {
        "prefix": "spec",
        "body":[
            "spec ${1:name} observes ${2:EventNames} {",
            "    // fields",
            "    start state ${3:statename} {",
            "        $0",
            "    }",
            "}"
        ],
        "description": "Spec"
    },
    "Declare Type":{
        "prefix": "type",
        "body":[
            "type ${1:type} = $0;"
        ],
        "description": "Declare Type"
    },
    
    "Declare Tuple Type":{
        "prefix": "type",
        "body":[
            "type ${1:name}",
            "(",
            "    ${2:field}: ${3:type},",
            "    $0",
            ");"
        ],
        "description": "Declare Tuple Type"
    },
    
    "Enum":{
        "prefix": "enum",
        "body":[
            "enum ${1:name} {",
            "    ${2:item} = ${3:value},",
            "    $0",
            "}"
        ],
        "description": "Declare Enum"
    },
    
    "If":{
        "prefix": "if",
        "body":[
            "if (${1:expr}) {",
            "    $0",
            "}"
        ],
        "description": "If"
    },

    "If Else":{
        "prefix": "if",
        "body":[
            "if (${1:expr}) {",
            "    $0",
            "} else if (${2:expr2}) {",
            "}"
        ],
        "description": "If Else"
    },
    
    "Function":{
        "prefix": "fun",
        "body":[
            "fun ${1:name}(${2:params}) : ${3:returns} {",
            "    $0",
            "}"
        ],
        "description": "Declare Function"
    },

    "Var":{
        "prefix": "var",
        "body":[
            "var ${1:name} : ${2:type};"            
        ],
        "description": "Declare Variable"
    }

}