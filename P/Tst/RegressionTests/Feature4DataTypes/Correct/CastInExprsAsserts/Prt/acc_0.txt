OUT: <CreateLog> Machine Main(1) is created
OUT: <StateLog> Machine Main(1) entered state Main.S
OUT: <CreateLog> Machine XYZ(2) is created
OUT: <StateLog> Machine XYZ(2) entered state XYZ.init
OUT: <EnqueueLog> Enqueued event EI1 with payload 1 on Machine XYZ(2)
OUT: <DequeueLog> Dequeued event EI1 with payload 1 by Machine XYZ(2)
OUT: <PushLog> Machine XYZ(2) pushed
OUT: <StateLog> Machine XYZ(2) entered state XYZ.XYZEI1
OUT: <ExitLog> Machine XYZ(2) exiting state XYZ.XYZEI1
OUT: <PopLog> Machine XYZ(2) popped and reentered state XYZ.init
OUT: <EnqueueLog> Enqueued event EI6 with payload 1 on Machine XYZ(2)
OUT: <DequeueLog> Dequeued event EI6 with payload 1 by Machine XYZ(2)
OUT: <PushLog> Machine XYZ(2) pushed
OUT: <StateLog> Machine XYZ(2) entered state XYZ.XYZEI6
OUT: <ExitLog> Machine XYZ(2) exiting state XYZ.XYZEI6
OUT: <PopLog> Machine XYZ(2) popped and reentered state XYZ.init
OUT: <EnqueueLog> Enqueued event ET1 with payload (1, true) on Machine XYZ(2)
OUT: <DequeueLog> Dequeued event ET1 with payload (1, true) by Machine XYZ(2)
OUT: <PushLog> Machine XYZ(2) pushed
OUT: <StateLog> Machine XYZ(2) entered state XYZ.XYZET1
OUT: <ExitLog> Machine XYZ(2) exiting state XYZ.XYZET1
OUT: <PopLog> Machine XYZ(2) popped and reentered state XYZ.init
OUT: <EnqueueLog> Enqueued event ET2 with payload (2, false) on Machine XYZ(2)
OUT: <DequeueLog> Dequeued event ET2 with payload (2, false) by Machine XYZ(2)
OUT: <PushLog> Machine XYZ(2) pushed
OUT: <StateLog> Machine XYZ(2) entered state XYZ.XYZET2
OUT: <ExitLog> Machine XYZ(2) exiting state XYZ.XYZET2
OUT: <PopLog> Machine XYZ(2) popped and reentered state XYZ.init
OUT: <EnqueueLog> Enqueued event ESEQ1 with payload [1, 2] on Machine XYZ(2)
OUT: <DequeueLog> Dequeued event ESEQ1 with payload [1, 2] by Machine XYZ(2)
OUT: <PushLog> Machine XYZ(2) pushed
OUT: <StateLog> Machine XYZ(2) entered state XYZ.XYZESEQ1
OUT: <ExitLog> Machine XYZ(2) exiting state XYZ.XYZESEQ1
OUT: <PopLog> Machine XYZ(2) popped and reentered state XYZ.init
OUT: <EnqueueLog> Enqueued event ESEQ2 with payload [1, 2] on Machine XYZ(2)
OUT: <DequeueLog> Dequeued event ESEQ2 with payload [1, 2] by Machine XYZ(2)
OUT: <PushLog> Machine XYZ(2) pushed
OUT: <StateLog> Machine XYZ(2) entered state XYZ.XYZESEQ2
OUT: <ExitLog> Machine XYZ(2) exiting state XYZ.XYZESEQ2
OUT: <PopLog> Machine XYZ(2) popped and reentered state XYZ.init
OUT: <EnqueueLog> Enqueued event EMAP1 with payload {} (0 / 3) on Machine XYZ(2)
OUT: <DequeueLog> Dequeued event EMAP1 with payload {} (0 / 3) by Machine XYZ(2)
OUT: <PushLog> Machine XYZ(2) pushed
OUT: <StateLog> Machine XYZ(2) entered state XYZ.XYZEMAP1
OUT: <ExitLog> Machine XYZ(2) exiting state XYZ.XYZEMAP1
OUT: <PopLog> Machine XYZ(2) popped and reentered state XYZ.init
OUT: <EnqueueLog> Enqueued event EMAP11 with payload {0 --> 1, 3 --> 3*} (2 / 3) on Machine XYZ(2)
OUT: <DequeueLog> Dequeued event EMAP11 with payload {0 --> 1, 3 --> 3*} (2 / 3) by Machine XYZ(2)
OUT: <PushLog> Machine XYZ(2) pushed
OUT: <StateLog> Machine XYZ(2) entered state XYZ.XYZEMAP11
OUT: <ExitLog> Machine XYZ(2) exiting state XYZ.XYZEMAP11
OUT: <PopLog> Machine XYZ(2) popped and reentered state XYZ.init
OUT: <EnqueueLog> Enqueued event EMAP2 with payload {} (0 / 3) on Machine XYZ(2)
OUT: <DequeueLog> Dequeued event EMAP2 with payload {} (0 / 3) by Machine XYZ(2)
OUT: <PushLog> Machine XYZ(2) pushed
OUT: <StateLog> Machine XYZ(2) entered state XYZ.XYZEMAP2
OUT: <ExitLog> Machine XYZ(2) exiting state XYZ.XYZEMAP2
OUT: <PopLog> Machine XYZ(2) popped and reentered state XYZ.init
OUT: <EnqueueLog> Enqueued event EMAP3 with payload {0 --> 1, 3 --> 3*} (2 / 3) on Machine XYZ(2)
OUT: <DequeueLog> Dequeued event EMAP3 with payload {0 --> 1, 3 --> 3*} (2 / 3) by Machine XYZ(2)
OUT: <PushLog> Machine XYZ(2) pushed
OUT: <StateLog> Machine XYZ(2) entered state XYZ.XYZEMAP3
OUT: <ExitLog> Machine XYZ(2) exiting state XYZ.XYZEMAP3
OUT: <PopLog> Machine XYZ(2) popped and reentered state XYZ.init
OUT: <RaiseLog> Machine Main(1) raised event halt with payload null
OUT: <ExitLog> Machine Main(1) exiting state Main.S
OUT: <HaltLog> Machine Main(1) halted in state Main.S
OUT: 
EXIT: 0
