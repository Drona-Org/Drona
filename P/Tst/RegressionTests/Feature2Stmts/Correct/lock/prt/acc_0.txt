OUT: <CreateLog> Machine Main(1) is created
OUT: <StateLog> Machine Main(1) entered state Main.S
OUT: <CreateLog> Machine Lock(2) is created
OUT: <StateLog> Machine Lock(2) entered state Lock.Unheld
OUT: <CreateLog> Machine Client(3) is created
OUT: <StateLog> Machine Client(3) entered state Client.Init
OUT: <EnqueueLog> Enqueued event ACQUIRE_REQ with payload < (1, 0, 0, 0), 3> on Machine Lock(2)
OUT: <DequeueLog> Dequeued event ACQUIRE_REQ with payload < (1, 0, 0, 0), 3> by Machine Lock(2)
OUT: <ExitLog> Machine Lock(2) exiting state Lock.Unheld
OUT: <StateLog> Machine Lock(2) entered state Lock.Held
OUT: <EnqueueLog> Enqueued event ACQUIRE_RESP with payload [] on Machine Client(3)
OUT: <DequeueLog> Dequeued event ACQUIRE_RESP with payload [] by Machine Client(3)
OUT: <EnqueueLog> Enqueued event RELEASE with payload [1] on Machine Lock(2)
OUT: <DequeueLog> Dequeued event RELEASE with payload [1] by Machine Lock(2)
OUT: <ExitLog> Machine Lock(2) exiting state Lock.Held
OUT: <StateLog> Machine Lock(2) entered state Lock.Unheld
OUT: <EnqueueLog> Enqueued event ACQUIRE_REQ with payload < (1, 0, 0, 0), 3> on Machine Lock(2)
OUT: <DequeueLog> Dequeued event ACQUIRE_REQ with payload < (1, 0, 0, 0), 3> by Machine Lock(2)
OUT: <ExitLog> Machine Lock(2) exiting state Lock.Unheld
OUT: <StateLog> Machine Lock(2) entered state Lock.Held
OUT: <EnqueueLog> Enqueued event ACQUIRE_RESP with payload [1] on Machine Client(3)
OUT: <DequeueLog> Dequeued event ACQUIRE_RESP with payload [1] by Machine Client(3)
OUT: <EnqueueLog> Enqueued event RELEASE with payload [1, 1] on Machine Lock(2)
OUT: <DequeueLog> Dequeued event RELEASE with payload [1, 1] by Machine Lock(2)
OUT: <ExitLog> Machine Lock(2) exiting state Lock.Held
OUT: <StateLog> Machine Lock(2) entered state Lock.Unheld
OUT: <EnqueueLog> Enqueued event ACQUIRE_REQ with payload < (1, 0, 0, 0), 3> on Machine Lock(2)
OUT: <DequeueLog> Dequeued event ACQUIRE_REQ with payload < (1, 0, 0, 0), 3> by Machine Lock(2)
OUT: <ExitLog> Machine Lock(2) exiting state Lock.Unheld
OUT: <StateLog> Machine Lock(2) entered state Lock.Held
OUT: <EnqueueLog> Enqueued event ACQUIRE_RESP with payload [1, 1] on Machine Client(3)
OUT: <DequeueLog> Dequeued event ACQUIRE_RESP with payload [1, 1] by Machine Client(3)
OUT: <EnqueueLog> Enqueued event RELEASE with payload [1, 1, 1] on Machine Lock(2)
OUT: <DequeueLog> Dequeued event RELEASE with payload [1, 1, 1] by Machine Lock(2)
OUT: <ExitLog> Machine Lock(2) exiting state Lock.Held
OUT: <StateLog> Machine Lock(2) entered state Lock.Unheld
OUT: <CreateLog> Machine Client(4) is created
OUT: <StateLog> Machine Client(4) entered state Client.Init
OUT: <EnqueueLog> Enqueued event ACQUIRE_REQ with payload < (1, 0, 0, 0), 4> on Machine Lock(2)
OUT: <DequeueLog> Dequeued event ACQUIRE_REQ with payload < (1, 0, 0, 0), 4> by Machine Lock(2)
OUT: <ExitLog> Machine Lock(2) exiting state Lock.Unheld
OUT: <StateLog> Machine Lock(2) entered state Lock.Held
OUT: <EnqueueLog> Enqueued event ACQUIRE_RESP with payload [1, 1, 1] on Machine Client(4)
OUT: <DequeueLog> Dequeued event ACQUIRE_RESP with payload [1, 1, 1] by Machine Client(4)
OUT: <EnqueueLog> Enqueued event RELEASE with payload [1, 1, 1, 1] on Machine Lock(2)
OUT: <DequeueLog> Dequeued event RELEASE with payload [1, 1, 1, 1] by Machine Lock(2)
OUT: <ExitLog> Machine Lock(2) exiting state Lock.Held
OUT: <StateLog> Machine Lock(2) entered state Lock.Unheld
OUT: <EnqueueLog> Enqueued event ACQUIRE_REQ with payload < (1, 0, 0, 0), 4> on Machine Lock(2)
OUT: <DequeueLog> Dequeued event ACQUIRE_REQ with payload < (1, 0, 0, 0), 4> by Machine Lock(2)
OUT: <ExitLog> Machine Lock(2) exiting state Lock.Unheld
OUT: <StateLog> Machine Lock(2) entered state Lock.Held
OUT: <EnqueueLog> Enqueued event ACQUIRE_RESP with payload [1, 1, 1, 1] on Machine Client(4)
OUT: <DequeueLog> Dequeued event ACQUIRE_RESP with payload [1, 1, 1, 1] by Machine Client(4)
OUT: <EnqueueLog> Enqueued event RELEASE with payload [1, 1, 1, 1, 1] on Machine Lock(2)
OUT: <DequeueLog> Dequeued event RELEASE with payload [1, 1, 1, 1, 1] by Machine Lock(2)
OUT: <ExitLog> Machine Lock(2) exiting state Lock.Held
OUT: <StateLog> Machine Lock(2) entered state Lock.Unheld
OUT: 
EXIT: 0
