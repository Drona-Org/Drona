//// Program BootMaster_4ml_LinkModel.4ml
model BootMaster_4ml_LinkModel of PLink at "/home/ankush/Workspace/Drona/Submodule/P/Bld/Drops/Release/x64/Binaries/PLink.4ml"
{
  EnumTypeDef("mav_autopilot", StringList("mav_autopilot_generic", StringList("mav_autopilot_reserved", StringList("mav_autopilot_slugs", StringList("mav_autopilot_ardupilotmega", StringList("mav_autopilot_openpilot", StringList("mav_autopilot_generic_waypoints_only", StringList("mav_autopilot_generic_waypoints_and_simple_navigation_only", StringList("mav_autopilot_generic_mission_full", StringList("mav_autopilot_invalid", StringList("mav_autopilot_ppz", StringList("mav_autopilot_udb", StringList("mav_autopilot_fp", StringList("mav_autopilot_px4", StringList("mav_autopilot_smaccmpilot", StringList("mav_autopilot_autoquad", StringList("mav_autopilot_armazila", StringList("mav_autopilot_aerob", StringList("mav_autopilot_asluav", NIL)))))))))))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(5, IntegerList(6, IntegerList(7, IntegerList(8, IntegerList(9, IntegerList(10, IntegerList(11, IntegerList(12, IntegerList(13, IntegerList(14, IntegerList(15, IntegerList(16, IntegerList(17, NIL)))))))))))))))))), IdList(1, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  DependsOn("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/BootMaster.4ml", "/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PGenerated/PX4API.4ml"),
  EnumTypeDef("VEHICLE_MODE_FLAG", StringList("VEHICLE_MODE_FLAG_NONE", StringList("VEHICLE_MODE_FLAG_CUSTOM_MODE_ENABLED", NIL)), IntegerList(0, IntegerList(1, NIL)), IdList(26, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EnumTypeDef("PX4_CUSTOM_MAIN_MODE", StringList("PX4_CUSTOM_MAIN_MODE_NONE", StringList("PX4_CUSTOM_MAIN_MODE_MANUAL", StringList("PX4_CUSTOM_MAIN_MODE_ALTCTL", StringList("PX4_CUSTOM_MAIN_MODE_POSCTL", StringList("PX4_CUSTOM_MAIN_MODE_AUTO", StringList("PX4_CUSTOM_MAIN_MODE_ACRO", StringList("PX4_CUSTOM_MAIN_MODE_OFFBOARD", StringList("PX4_CUSTOM_MAIN_MODE_STABILIZED", StringList("PX4_CUSTOM_MAIN_MODE_RATTITUDE", NIL))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(5, IntegerList(6, IntegerList(7, IntegerList(8, NIL))))))))), IdList(27, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EnumTypeDef("PX4_CUSTOM_SUB_MODE_AUTO", StringList("PX4_CUSTOM_SUB_MODE_AUTO_NONE", StringList("PX4_CUSTOM_SUB_MODE_AUTO_READY", StringList("PX4_CUSTOM_SUB_MODE_AUTO_TAKEOFF", StringList("PX4_CUSTOM_SUB_MODE_AUTO_LOITER", StringList("PX4_CUSTOM_SUB_MODE_AUTO_MISSION", StringList("PX4_CUSTOM_SUB_MODE_AUTO_RTL", StringList("PX4_CUSTOM_SUB_MODE_AUTO_LAND", StringList("PX4_CUSTOM_SUB_MODE_AUTO_RTGS", StringList("PX4_CUSTOM_SUB_MODE_AUTO_FOLLOW_TARGET", NIL))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(5, IntegerList(6, IntegerList(7, IntegerList(8, NIL))))))))), IdList(28, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("mission_arm", NIL, NIL, IdList(51, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("mission_disarm", NIL, NIL, IdList(52, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("mission_land", NIL, NIL, IdList(55, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("mission_loitering", NIL, NIL, IdList(56, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("mission_finished", NIL, NIL, IdList(57, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EnumTypeDef("mav_goto", StringList("mav_goto_do_hold", StringList("mav_goto_do_continue", StringList("mav_goto_hold_at_current_position", StringList("mav_goto_hold_at_specified_position", NIL)))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, NIL)))), IdList(6, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_mode_flag_decode_position", StringList("mav_mode_flag_decode_position_none", StringList("mav_mode_flag_decode_position_safety", StringList("mav_mode_flag_decode_position_manual", StringList("mav_mode_flag_decode_position_hil", StringList("mav_mode_flag_decode_position_stabilize", StringList("mav_mode_flag_decode_position_guided", StringList("mav_mode_flag_decode_position_auto", StringList("mav_mode_flag_decode_position_test", StringList("mav_mode_flag_decode_position_custom_mode", NIL))))))))), IntegerList(0, IntegerList(128, IntegerList(64, IntegerList(32, IntegerList(16, IntegerList(8, IntegerList(4, IntegerList(2, IntegerList(1, NIL))))))))), IdList(5, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_mode_flag", StringList("mav_mode_flag_none", StringList("mav_mode_flag_safety_armed", StringList("mav_mode_flag_manual_input_enabled", StringList("mav_mode_flag_hil_enabled", StringList("mav_mode_flag_stabilize_enabled", StringList("mav_mode_flag_guided_enabled", StringList("mav_mode_flag_auto_enabled", StringList("mav_mode_flag_test_enabled", StringList("mav_mode_flag_custom_mode_enabled", NIL))))))))), IntegerList(0, IntegerList(128, IntegerList(64, IntegerList(32, IntegerList(16, IntegerList(8, IntegerList(4, IntegerList(2, IntegerList(1, NIL))))))))), IdList(4, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("firmware_version_type", StringList("firmware_version_type_dev", StringList("firmware_version_type_alpha", StringList("firmware_version_type_beta", StringList("firmware_version_type_rc", StringList("firmware_version_type_official", NIL))))), IntegerList(0, IntegerList(64, IntegerList(128, IntegerList(192, IntegerList(255, NIL))))), IdList(3, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_battery_function", StringList("mav_battery_function_unknown", StringList("mav_battery_function_all", StringList("mav_battery_function_propulsion", StringList("mav_battery_function_avionics", StringList("mav_battery_type_payload", NIL))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, NIL))))), IdList(32, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_battery_type", StringList("mav_battery_type_unknown", StringList("mav_battery_type_lipo", StringList("mav_battery_type_life", StringList("mav_battery_type_lion", StringList("mav_battery_type_nimh", NIL))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, NIL))))), IdList(31, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_estimator_type", StringList("mav_estimator_type_none", StringList("mav_estimator_type_naive", StringList("mav_estimator_type_vision", StringList("mav_estimator_type_vio", StringList("mav_estimator_type_gps", StringList("mav_estimator_type_gps_ins", NIL)))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(5, NIL)))))), IdList(30, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("gps_fix_type", StringList("gps_fix_type_no_gps", StringList("gps_fix_type_no_fix", StringList("gps_fix_type_2d_fix", StringList("gps_fix_type_3d_fix", StringList("gps_fix_type_dgps", StringList("gps_fix_type_rtk_float", StringList("gps_fix_type_rtk_fixed", StringList("gps_fix_type_static", NIL)))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(5, IntegerList(6, IntegerList(7, NIL)))))))), IdList(45, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_collision_src", StringList("mav_collision_src_adsb", StringList("mav_collision_src_mavlink_gps_global_int", NIL)), IntegerList(0, IntegerList(1, NIL)), IdList(44, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_collision_threat_level", StringList("mav_collision_threat_level_none", StringList("mav_collision_threat_level_low", StringList("mav_collision_threat_level_high", NIL))), IntegerList(0, IntegerList(1, IntegerList(2, NIL))), IdList(43, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_collision_action", StringList("mav_collision_action_none", StringList("mav_collision_action_report", StringList("mav_collision_action_ascend_or_descend", StringList("mav_collision_action_move_horizontally", StringList("mav_collision_action_move_perpendicular", StringList("mav_collision_action_rtl", StringList("mav_collision_action_hover", NIL))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(5, IntegerList(6, NIL))))))), IdList(42, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("gps_input_ignore_flags", StringList("gps_input_ignore_flags_none", StringList("gps_input_ignore_flag_alt", StringList("gps_input_ignore_flag_hdop", StringList("gps_input_ignore_flag_vdop", StringList("gps_input_ignore_flag_vel_horiz", StringList("gps_input_ignore_flag_vel_vert", StringList("gps_input_ignore_flag_speed_accuracy", StringList("gps_input_ignore_flag_horizontal_accuracy", StringList("gps_input_ignore_flag_vertical_accuracy", NIL))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(4, IntegerList(8, IntegerList(16, IntegerList(32, IntegerList(64, IntegerList(128, NIL))))))))), IdList(41, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("motor_test_throttle_type", StringList("motor_test_throttle_percent", StringList("motor_test_throttle_pwm", StringList("motor_test_throttle_pilot", NIL))), IntegerList(0, IntegerList(1, IntegerList(2, NIL))), IdList(40, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("estimator_status_flags", StringList("estimator_status_flags_none", StringList("estimator_attitude", StringList("estimator_velocity_horiz", StringList("estimator_velocity_vert", StringList("estimator_pos_horiz_rel", StringList("estimator_pos_horiz_abs", StringList("estimator_pos_vert_abs", StringList("estimator_pos_vert_agl", StringList("estimator_const_pos_mode", StringList("estimator_pred_pos_horiz_rel", StringList("estimator_pred_pos_horiz_abs", StringList("estimator_gps_glitch", NIL)))))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(4, IntegerList(8, IntegerList(16, IntegerList(32, IntegerList(64, IntegerList(128, IntegerList(256, IntegerList(512, IntegerList(1024, NIL)))))))))))), IdList(39, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_do_reposition_flags", StringList("mav_do_reposition_flags_none", StringList("mav_do_reposition_flags_change_mode", NIL)), IntegerList(0, IntegerList(1, NIL)), IdList(38, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("adsb_flags", StringList("adsb_flags_none", StringList("adsb_flags_valid_coords", StringList("adsb_flags_valid_altitude", StringList("adsb_flags_valid_heading", StringList("adsb_flags_valid_velocity", StringList("adsb_flags_valid_callsign", StringList("adsb_flags_valid_squawk", StringList("adsb_flags_simulated", NIL)))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(4, IntegerList(8, IntegerList(16, IntegerList(32, IntegerList(64, NIL)))))))), IdList(37, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("adsb_emitter_type", StringList("adsb_emitter_type_no_info", StringList("adsb_emitter_type_light", StringList("adsb_emitter_type_small", StringList("adsb_emitter_type_large", StringList("adsb_emitter_type_high_vortex_large", StringList("adsb_emitter_type_heavy", StringList("adsb_emitter_type_highly_manuv", StringList("adsb_emitter_type_rotocraft", StringList("adsb_emitter_type_unassigned", StringList("adsb_emitter_type_glider", StringList("adsb_emitter_type_lighter_air", StringList("adsb_emitter_type_parachute", StringList("adsb_emitter_type_ultra_light", StringList("adsb_emitter_type_unassigned2", StringList("adsb_emitter_type_uav", StringList("adsb_emitter_type_space", StringList("adsb_emitter_type_unassgined3", StringList("adsb_emitter_type_emergency_surface", StringList("adsb_emitter_type_service_surface", StringList("adsb_emitter_type_point_obstacle", NIL)))))))))))))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(5, IntegerList(6, IntegerList(7, IntegerList(8, IntegerList(9, IntegerList(10, IntegerList(11, IntegerList(12, IntegerList(13, IntegerList(14, IntegerList(15, IntegerList(16, IntegerList(17, IntegerList(18, IntegerList(19, NIL)))))))))))))))))))), IdList(36, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("adsb_altitude_type", StringList("adsb_altitude_type_pressure_qnh", StringList("adsb_altitude_type_geometric", NIL)), IntegerList(0, IntegerList(1, NIL)), IdList(35, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_landed_state", StringList("mav_landed_state_undefined", StringList("mav_landed_state_on_ground", StringList("mav_landed_state_in_air", NIL))), IntegerList(0, IntegerList(1, IntegerList(2, NIL))), IdList(34, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_vtol_state", StringList("mav_vtol_state_undefined", StringList("mav_vtol_state_transition_to_fw", StringList("mav_vtol_state_transition_to_mc", StringList("mav_vtol_state_mc", StringList("mav_vtol_state_fw", NIL))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, NIL))))), IdList(33, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_protocol_capability", StringList("mav_protocol_capability_none", StringList("mav_protocol_capability_mission_float", StringList("mav_protocol_capability_param_float", StringList("mav_protocol_capability_mission_int", StringList("mav_protocol_capability_command_int", StringList("mav_protocol_capability_param_union", StringList("mav_protocol_capability_ftp", StringList("mav_protocol_capability_set_attitude_target", StringList("mav_protocol_capability_set_position_target_local_ned", StringList("mav_protocol_capability_set_position_target_global_int", StringList("mav_protocol_capability_terrain", StringList("mav_protocol_capability_set_actuator_target", StringList("mav_protocol_capability_flight_termination", StringList("mav_protocol_capability_compass_calibration", StringList("mav_protocol_capability_mavlink2", NIL))))))))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(4, IntegerList(8, IntegerList(16, IntegerList(32, IntegerList(64, IntegerList(128, IntegerList(256, IntegerList(512, IntegerList(1024, IntegerList(2048, IntegerList(4096, IntegerList(8192, NIL))))))))))))))), IdList(29, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_sensor_orientation", StringList("mav_sensor_rotation_none", StringList("mav_sensor_rotation_yaw_45", StringList("mav_sensor_rotation_yaw_90", StringList("mav_sensor_rotation_yaw_135", StringList("mav_sensor_rotation_yaw_180", StringList("mav_sensor_rotation_yaw_225", StringList("mav_sensor_rotation_yaw_270", StringList("mav_sensor_rotation_yaw_315", StringList("mav_sensor_rotation_roll_180", StringList("mav_sensor_rotation_roll_180_yaw_45", StringList("mav_sensor_rotation_roll_180_yaw_90", StringList("mav_sensor_rotation_roll_180_yaw_135", StringList("mav_sensor_rotation_pitch_180", StringList("mav_sensor_rotation_roll_180_yaw_225", StringList("mav_sensor_rotation_roll_180_yaw_270", StringList("mav_sensor_rotation_roll_180_yaw_315", StringList("mav_sensor_rotation_roll_90", StringList("mav_sensor_rotation_roll_90_yaw_45", StringList("mav_sensor_rotation_roll_90_yaw_90", StringList("mav_sensor_rotation_roll_90_yaw_135", StringList("mav_sensor_rotation_roll_270", StringList("mav_sensor_rotation_roll_270_yaw_45", StringList("mav_sensor_rotation_roll_270_yaw_90", StringList("mav_sensor_rotation_roll_270_yaw_135", StringList("mav_sensor_rotation_pitch_90", StringList("mav_sensor_rotation_pitch_270", StringList("mav_sensor_rotation_pitch_180_yaw_90", StringList("mav_sensor_rotation_pitch_180_yaw_270", StringList("mav_sensor_rotation_roll_90_pitch_90", StringList("mav_sensor_rotation_roll_180_pitch_90", StringList("mav_sensor_rotation_roll_270_pitch_90", StringList("mav_sensor_rotation_roll_90_pitch_180", StringList("mav_sensor_rotation_roll_270_pitch_180", StringList("mav_sensor_rotation_roll_90_pitch_270", StringList("mav_sensor_rotation_roll_180_pitch_270", StringList("mav_sensor_rotation_roll_270_pitch_270", StringList("mav_sensor_rotation_roll_90_pitch_180_yaw_90", StringList("mav_sensor_rotation_roll_90_yaw_270", StringList("mav_sensor_rotation_roll_315_pitch_315_yaw_315", NIL))))))))))))))))))))))))))))))))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(5, IntegerList(6, IntegerList(7, IntegerList(8, IntegerList(9, IntegerList(10, IntegerList(11, IntegerList(12, IntegerList(13, IntegerList(14, IntegerList(15, IntegerList(16, IntegerList(17, IntegerList(18, IntegerList(19, IntegerList(20, IntegerList(21, IntegerList(22, IntegerList(23, IntegerList(24, IntegerList(25, IntegerList(26, IntegerList(27, IntegerList(28, IntegerList(29, IntegerList(30, IntegerList(31, IntegerList(32, IntegerList(33, IntegerList(34, IntegerList(35, IntegerList(36, IntegerList(37, IntegerList(38, NIL))))))))))))))))))))))))))))))))))))))), IdList(28, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_distance_sensor", StringList("mav_distance_sensor_laser", StringList("mav_distance_sensor_ultrasound", StringList("mav_distance_sensor_infrared", NIL))), IntegerList(0, IntegerList(1, IntegerList(2, NIL))), IdList(27, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("serial_control_flag", StringList("serial_control_flag_none", StringList("serial_control_flag_reply", StringList("serial_control_flag_respond", StringList("serial_control_flag_exclusive", StringList("serial_control_flag_blocking", StringList("serial_control_flag_multi", NIL)))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(4, IntegerList(8, IntegerList(16, NIL)))))), IdList(26, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("serial_control_dev", StringList("serial_control_dev_telem1", StringList("serial_control_dev_telem2", StringList("serial_control_dev_gps1", StringList("serial_control_dev_gps2", StringList("serial_control_dev_shell", NIL))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(10, NIL))))), IdList(25, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_power_status", StringList("mav_power_status_none", StringList("mav_power_status_brick_valid", StringList("mav_power_status_servo_valid", StringList("mav_power_status_usb_connected", StringList("mav_power_status_periph_overcurrent", StringList("mav_power_status_periph_hipower_overcurrent", StringList("mav_power_status_changed", NIL))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(4, IntegerList(8, IntegerList(16, IntegerList(32, NIL))))))), IdList(24, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_severity", StringList("mav_severity_emergency", StringList("mav_severity_alert", StringList("mav_severity_critical", StringList("mav_severity_error", StringList("mav_severity_warning", StringList("mav_severity_notice", StringList("mav_severity_info", StringList("mav_severity_debug", NIL)))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(5, IntegerList(6, IntegerList(7, NIL)))))))), IdList(23, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_mission_result", StringList("mav_mission_accepted", StringList("mav_mission_error", StringList("mav_mission_unsupported_frame", StringList("mav_mission_unsupported", StringList("mav_mission_no_space", StringList("mav_mission_invalid", StringList("mav_mission_invalid_param1", StringList("mav_mission_invalid_param2", StringList("mav_mission_invalid_param3", StringList("mav_mission_invalid_param4", StringList("mav_mission_invalid_param5_x", StringList("mav_mission_invalid_param6_y", StringList("mav_mission_invalid_param7", StringList("mav_mission_invalid_sequence", StringList("mav_mission_denied", NIL))))))))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(5, IntegerList(6, IntegerList(7, IntegerList(8, IntegerList(9, IntegerList(10, IntegerList(11, IntegerList(12, IntegerList(13, IntegerList(14, NIL))))))))))))))), IdList(22, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_result", StringList("mav_result_accepted", StringList("mav_result_temporarily_rejected", StringList("mav_result_denied", StringList("mav_result_unsupported", StringList("mav_result_failed", NIL))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, NIL))))), IdList(21, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_param_type", StringList("mav_param_type_none", StringList("mav_param_type_uint8", StringList("mav_param_type_int8", StringList("mav_param_type_uint16", StringList("mav_param_type_int16", StringList("mav_param_type_uint32", StringList("mav_param_type_int32", StringList("mav_param_type_uint64", StringList("mav_param_type_int64", StringList("mav_param_type_real32", StringList("mav_param_type_real64", NIL))))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(5, IntegerList(6, IntegerList(7, IntegerList(8, IntegerList(9, IntegerList(10, NIL))))))))))), IdList(20, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_cmd_ack", StringList("mav_cmd_ack_ok", StringList("mav_cmd_ack_err_fail", StringList("mav_cmd_ack_err_access_denied", StringList("mav_cmd_ack_err_not_supported", StringList("mav_cmd_ack_err_coordinate_frame_not_supported", StringList("mav_cmd_ack_err_coordinates_out_of_range", StringList("mav_cmd_ack_err_x_lat_out_of_range", StringList("mav_cmd_ack_err_y_lon_out_of_range", StringList("mav_cmd_ack_err_z_alt_out_of_range", NIL))))))))), NIL, IdList(19, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_roi", StringList("mav_roi_none", StringList("mav_roi_wpnext", StringList("mav_roi_wpindex", StringList("mav_roi_location", StringList("mav_roi_target", NIL))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, NIL))))), IdList(18, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_data_stream", StringList("mav_data_stream_all", StringList("mav_data_stream_raw_sensors", StringList("mav_data_stream_extended_status", StringList("mav_data_stream_rc_channels", StringList("mav_data_stream_raw_controller", StringList("mav_data_stream_position", StringList("mav_data_stream_extra1", StringList("mav_data_stream_extra2", StringList("mav_data_stream_extra3", NIL))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(6, IntegerList(10, IntegerList(11, IntegerList(12, NIL))))))))), IdList(17, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_cmd", StringList("mav_cmd_none", StringList("mav_cmd_nav_waypoint", StringList("mav_cmd_nav_loiter_unlim", StringList("mav_cmd_nav_loiter_turns", StringList("mav_cmd_nav_loiter_time", StringList("mav_cmd_nav_return_to_launch", StringList("mav_cmd_nav_land", StringList("mav_cmd_nav_takeoff", StringList("mav_cmd_nav_land_local", StringList("mav_cmd_nav_takeoff_local", StringList("mav_cmd_nav_follow", StringList("mav_cmd_nav_continue_and_change_alt", StringList("mav_cmd_nav_loiter_to_alt", StringList("mav_cmd_do_follow", StringList("mav_cmd_do_follow_reposition", StringList("mav_cmd_nav_roi", StringList("mav_cmd_nav_pathplanning", StringList("mav_cmd_nav_spline_waypoint", StringList("mav_cmd_nav_vtol_takeoff", StringList("mav_cmd_nav_vtol_land", StringList("mav_cmd_nav_guided_enable", StringList("mav_cmd_nav_delay", StringList("mav_cmd_nav_last", StringList("mav_cmd_condition_delay", StringList("mav_cmd_condition_change_alt", StringList("mav_cmd_condition_distance", StringList("mav_cmd_condition_yaw", StringList("mav_cmd_condition_last", StringList("mav_cmd_do_set_mode", StringList("mav_cmd_do_jump", StringList("mav_cmd_do_change_speed", StringList("mav_cmd_do_set_home", StringList("mav_cmd_do_set_parameter", StringList("mav_cmd_do_set_relay", StringList("mav_cmd_do_repeat_relay", StringList("mav_cmd_do_set_servo", StringList("mav_cmd_do_repeat_servo", StringList("mav_cmd_do_flighttermination", StringList("mav_cmd_do_change_altitude", StringList("mav_cmd_do_land_start", StringList("mav_cmd_do_rally_land", StringList("mav_cmd_do_go_around", StringList("mav_cmd_do_reposition", StringList("mav_cmd_do_pause_continue", StringList("mav_cmd_do_set_reverse", StringList("mav_cmd_do_control_video", StringList("mav_cmd_do_set_roi", StringList("mav_cmd_do_digicam_configure", StringList("mav_cmd_do_digicam_control", StringList("mav_cmd_do_mount_configure", StringList("mav_cmd_do_mount_control", StringList("mav_cmd_do_set_cam_trigg_dist", StringList("mav_cmd_do_fence_enable", StringList("mav_cmd_do_parachute", StringList("mav_cmd_do_motor_test", StringList("mav_cmd_do_inverted_flight", StringList("mav_cmd_nav_set_yaw_speed", StringList("mav_cmd_do_mount_control_quat", StringList("mav_cmd_do_guided_master", StringList("mav_cmd_do_guided_limits", StringList("mav_cmd_do_engine_control", StringList("mav_cmd_do_last", StringList("mav_cmd_preflight_calibration", StringList("mav_cmd_preflight_set_sensor_offsets", StringList("mav_cmd_preflight_uavcan", StringList("mav_cmd_preflight_storage", StringList("mav_cmd_preflight_reboot_shutdown", StringList("mav_cmd_override_goto", StringList("mav_cmd_mission_start", StringList("mav_cmd_component_arm_disarm", StringList("mav_cmd_get_home_position", StringList("mav_cmd_start_rx_pair", StringList("mav_cmd_get_message_interval", StringList("mav_cmd_set_message_interval", StringList("mav_cmd_request_autopilot_capabilities", StringList("mav_cmd_request_camera_information", StringList("mav_cmd_request_camera_settings", StringList("mav_cmd_set_camera_settings_1", StringList("mav_cmd_set_camera_settings_2", StringList("mav_cmd_request_storage_information", StringList("mav_cmd_storage_format", StringList("mav_cmd_request_camera_capture_status", StringList("mav_cmd_request_flight_information", StringList("mav_cmd_image_start_capture", StringList("mav_cmd_image_stop_capture", StringList("mav_cmd_do_trigger_control", StringList("mav_cmd_video_start_capture", StringList("mav_cmd_video_stop_capture", StringList("mav_cmd_logging_start", StringList("mav_cmd_logging_stop", StringList("mav_cmd_airframe_configuration", StringList("mav_cmd_panorama_create", StringList("mav_cmd_do_vtol_transition", StringList("mav_cmd_set_guided_submode_standard", StringList("mav_cmd_set_guided_submode_circle", StringList("mav_cmd_payload_prepare_deploy", StringList("mav_cmd_payload_control_deploy", StringList("mav_cmd_waypoint_user_1", StringList("mav_cmd_waypoint_user_2", StringList("mav_cmd_waypoint_user_3", StringList("mav_cmd_waypoint_user_4", StringList("mav_cmd_waypoint_user_5", StringList("mav_cmd_spatial_user_1", StringList("mav_cmd_spatial_user_2", StringList("mav_cmd_spatial_user_3", StringList("mav_cmd_spatial_user_4", StringList("mav_cmd_spatial_user_5", StringList("mav_cmd_user_1", StringList("mav_cmd_user_2", StringList("mav_cmd_user_3", StringList("mav_cmd_user_4", StringList("mav_cmd_user_5", NIL)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), IntegerList(0, IntegerList(16, IntegerList(17, IntegerList(18, IntegerList(19, IntegerList(20, IntegerList(21, IntegerList(22, IntegerList(23, IntegerList(24, IntegerList(25, IntegerList(30, IntegerList(31, IntegerList(32, IntegerList(33, IntegerList(80, IntegerList(81, IntegerList(82, IntegerList(84, IntegerList(85, IntegerList(92, IntegerList(93, IntegerList(95, IntegerList(112, IntegerList(113, IntegerList(114, IntegerList(115, IntegerList(159, IntegerList(176, IntegerList(177, IntegerList(178, IntegerList(179, IntegerList(180, IntegerList(181, IntegerList(182, IntegerList(183, IntegerList(184, IntegerList(185, IntegerList(186, IntegerList(189, IntegerList(190, IntegerList(191, IntegerList(192, IntegerList(193, IntegerList(194, IntegerList(200, IntegerList(201, IntegerList(202, IntegerList(203, IntegerList(204, IntegerList(205, IntegerList(206, IntegerList(207, IntegerList(208, IntegerList(209, IntegerList(210, IntegerList(213, IntegerList(220, IntegerList(221, IntegerList(222, IntegerList(223, IntegerList(240, IntegerList(241, IntegerList(242, IntegerList(243, IntegerList(245, IntegerList(246, IntegerList(252, IntegerList(300, IntegerList(400, IntegerList(410, IntegerList(500, IntegerList(510, IntegerList(511, IntegerList(520, IntegerList(521, IntegerList(522, IntegerList(523, IntegerList(524, IntegerList(525, IntegerList(526, IntegerList(527, IntegerList(528, IntegerList(2000, IntegerList(2001, IntegerList(2003, IntegerList(2500, IntegerList(2501, IntegerList(2510, IntegerList(2511, IntegerList(2520, IntegerList(2800, IntegerList(3000, IntegerList(4000, IntegerList(4001, IntegerList(30001, IntegerList(30002, IntegerList(31000, IntegerList(31001, IntegerList(31002, IntegerList(31003, IntegerList(31004, IntegerList(31005, IntegerList(31006, IntegerList(31007, IntegerList(31008, IntegerList(31009, IntegerList(31010, IntegerList(31011, IntegerList(31012, IntegerList(31013, IntegerList(31014, NIL)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), IdList(16, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_mount_mode", StringList("mav_mount_mode_retract", StringList("mav_mount_mode_neutral", StringList("mav_mount_mode_mavlink_targeting", StringList("mav_mount_mode_rc_targeting", StringList("mav_mount_mode_gps_point", NIL))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, NIL))))), IdList(15, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("fence_breach", StringList("fence_breach_none", StringList("fence_breach_minalt", StringList("fence_breach_maxalt", StringList("fence_breach_boundary", NIL)))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, NIL)))), IdList(14, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("fence_action", StringList("fence_action_none", StringList("fence_action_guided", StringList("fence_action_report", StringList("fence_action_guided_thr_pass", StringList("fence_action_rtl", NIL))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, NIL))))), IdList(13, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mavlink_data_stream_type", StringList("mavlink_data_stream_img_jpeg", StringList("mavlink_data_stream_img_bmp", StringList("mavlink_data_stream_img_raw8u", StringList("mavlink_data_stream_img_raw32u", StringList("mavlink_data_stream_img_pgm", StringList("mavlink_data_stream_img_png", NIL)))))), NIL, IdList(12, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_frame", StringList("mav_frame_global", StringList("mav_frame_local_ned", StringList("mav_frame_mission", StringList("mav_frame_global_relative_alt", StringList("mav_frame_local_enu", StringList("mav_frame_global_int", StringList("mav_frame_global_relative_alt_int", StringList("mav_frame_local_offset_ned", StringList("mav_frame_body_ned", StringList("mav_frame_body_offset_ned", StringList("mav_frame_global_terrain_alt", StringList("mav_frame_global_terrain_alt_int", NIL)))))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(5, IntegerList(6, IntegerList(7, IntegerList(8, IntegerList(9, IntegerList(10, IntegerList(11, NIL)))))))))))), IdList(11, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_sys_status_sensor", StringList("mav_sys_status_sensor_none", StringList("mav_sys_status_sensor_3d_gyro", StringList("mav_sys_status_sensor_3d_accel", StringList("mav_sys_status_sensor_3d_mag", StringList("mav_sys_status_sensor_absolute_pressure", StringList("mav_sys_status_sensor_differential_pressure", StringList("mav_sys_status_sensor_gps", StringList("mav_sys_status_sensor_optical_flow", StringList("mav_sys_status_sensor_vision_position", StringList("mav_sys_status_sensor_laser_position", StringList("mav_sys_status_sensor_external_ground_truth", StringList("mav_sys_status_sensor_angular_rate_control", StringList("mav_sys_status_sensor_attitude_stabilization", StringList("mav_sys_status_sensor_yaw_position", StringList("mav_sys_status_sensor_z_altitude_control", StringList("mav_sys_status_sensor_xy_position_control", StringList("mav_sys_status_sensor_motor_outputs", StringList("mav_sys_status_sensor_rc_receiver", StringList("mav_sys_status_sensor_3d_gyro2", StringList("mav_sys_status_sensor_3d_accel2", StringList("mav_sys_status_sensor_3d_mag2", StringList("mav_sys_status_geofence", StringList("mav_sys_status_ahrs", StringList("mav_sys_status_terrain", StringList("mav_sys_status_reverse_motor", StringList("mav_sys_status_logging", NIL)))))))))))))))))))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(4, IntegerList(8, IntegerList(16, IntegerList(32, IntegerList(64, IntegerList(128, IntegerList(256, IntegerList(512, IntegerList(1024, IntegerList(2048, IntegerList(4096, IntegerList(8192, IntegerList(16384, IntegerList(32768, IntegerList(65536, IntegerList(131072, IntegerList(262144, IntegerList(524288, IntegerList(1048576, IntegerList(2097152, IntegerList(4194304, IntegerList(8388608, IntegerList(16777216, NIL)))))))))))))))))))))))))), IdList(10, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_component", StringList("mav_comp_id_all", StringList("mav_comp_id_gps", StringList("mav_comp_id_missionplanner", StringList("mav_comp_id_pathplanner", StringList("mav_comp_id_mapper", StringList("mav_comp_id_camera", StringList("mav_comp_id_imu", StringList("mav_comp_id_imu_2", StringList("mav_comp_id_imu_3", StringList("mav_comp_id_udp_bridge", StringList("mav_comp_id_uart_bridge", StringList("mav_comp_id_system_control", StringList("mav_comp_id_servo1", StringList("mav_comp_id_servo2", StringList("mav_comp_id_servo3", StringList("mav_comp_id_servo4", StringList("mav_comp_id_servo5", StringList("mav_comp_id_servo6", StringList("mav_comp_id_servo7", StringList("mav_comp_id_servo8", StringList("mav_comp_id_servo9", StringList("mav_comp_id_servo10", StringList("mav_comp_id_servo11", StringList("mav_comp_id_servo12", StringList("mav_comp_id_servo13", StringList("mav_comp_id_servo14", StringList("mav_comp_id_gimbal", StringList("mav_comp_id_log", StringList("mav_comp_id_adsb", StringList("mav_comp_id_osd", StringList("mav_comp_id_peripheral", StringList("mav_comp_id_qx1_gimbal", NIL)))))))))))))))))))))))))))))))), IntegerList(0, IntegerList(220, IntegerList(190, IntegerList(195, IntegerList(180, IntegerList(100, IntegerList(200, IntegerList(201, IntegerList(202, IntegerList(240, IntegerList(241, IntegerList(250, IntegerList(140, IntegerList(141, IntegerList(142, IntegerList(143, IntegerList(144, IntegerList(145, IntegerList(146, IntegerList(147, IntegerList(148, IntegerList(149, IntegerList(150, IntegerList(151, IntegerList(152, IntegerList(153, IntegerList(154, IntegerList(155, IntegerList(156, IntegerList(157, IntegerList(158, IntegerList(159, NIL)))))))))))))))))))))))))))))))), IdList(9, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_state", StringList("mav_state_uninit", StringList("mav_state_boot", StringList("mav_state_calibrating", StringList("mav_state_standby", StringList("mav_state_active", StringList("mav_state_critical", StringList("mav_state_emergency", StringList("mav_state_poweroff", NIL)))))))), NIL, IdList(8, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_mode", StringList("mav_mode_preflight", StringList("mav_mode_stabilize_disarmed", StringList("mav_mode_stabilize_armed", StringList("mav_mode_manual_disarmed", StringList("mav_mode_manual_armed", StringList("mav_mode_guided_disarmed", StringList("mav_mode_guided_armed", StringList("mav_mode_auto_disarmed", StringList("mav_mode_auto_armed", StringList("mav_mode_test_disarmed", StringList("mav_mode_test_armed", NIL))))))))))), IntegerList(0, IntegerList(80, IntegerList(208, IntegerList(64, IntegerList(192, IntegerList(88, IntegerList(216, IntegerList(92, IntegerList(220, IntegerList(66, IntegerList(194, NIL))))))))))), IdList(7, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mav_type", StringList("mav_type_generic", StringList("mav_type_fixed_wing", StringList("mav_type_quadrotor", StringList("mav_type_coaxial", StringList("mav_type_helicopter", StringList("mav_type_antenna_tracker", StringList("mav_type_gcs", StringList("mav_type_airship", StringList("mav_type_free_balloon", StringList("mav_type_rocket", StringList("mav_type_ground_rover", StringList("mav_type_surface_boat", StringList("mav_type_submarine", StringList("mav_type_hexarotor", StringList("mav_type_octorotor", StringList("mav_type_tricopter", StringList("mav_type_flapping_wing", StringList("mav_type_kite", StringList("mav_type_onboard_controller", StringList("mav_type_vtol_duorotor", StringList("mav_type_vtol_quadrotor", StringList("mav_type_vtol_tiltrotor", StringList("mav_type_vtol_reserved2", StringList("mav_type_vtol_reserved3", StringList("mav_type_vtol_reserved4", StringList("mav_type_vtol_reserved5", StringList("mav_type_gimbal", StringList("mav_type_adsb", NIL)))))))))))))))))))))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(3, IntegerList(4, IntegerList(5, IntegerList(6, IntegerList(7, IntegerList(8, IntegerList(9, IntegerList(10, IntegerList(11, IntegerList(12, IntegerList(13, IntegerList(14, IntegerList(15, IntegerList(16, IntegerList(17, IntegerList(18, IntegerList(19, IntegerList(20, IntegerList(21, IntegerList(22, IntegerList(23, IntegerList(24, IntegerList(25, IntegerList(26, IntegerList(27, NIL)))))))))))))))))))))))))))), IdList(2, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  EnumTypeDef("mavlink_messages", StringList("msg_heartbeat", StringList("msg_sys_status", StringList("msg_system_time", StringList("msg_ping", StringList("msg_change_operator_control", StringList("msg_change_operator_control_ack", StringList("msg_auth_key", StringList("msg_set_mode", StringList("msg_param_request_read", StringList("msg_param_request_list", StringList("msg_param_value", StringList("msg_param_set", StringList("msg_gps_raw_int", StringList("msg_gps_status", StringList("msg_scaled_imu", StringList("msg_raw_imu", StringList("msg_raw_pressure", StringList("msg_scaled_pressure", StringList("msg_attitude", StringList("msg_attitude_quaternion", StringList("msg_local_position_ned", StringList("msg_global_position_int", StringList("msg_rc_channels_scaled", StringList("msg_rc_channels_raw", StringList("msg_servo_output_raw", StringList("msg_mission_request_partial_list", StringList("msg_mission_write_partial_list", StringList("msg_mission_item", StringList("msg_mission_request", StringList("msg_mission_set_current", StringList("msg_mission_current", StringList("msg_mission_request_list", StringList("msg_mission_count", StringList("msg_mission_clear_all", StringList("msg_mission_item_reached", StringList("msg_mission_ack", StringList("msg_set_gps_global_origin", StringList("msg_gps_global_origin", StringList("msg_param_map_rc", StringList("msg_mission_request_int", StringList("msg_safety_set_allowed_area", StringList("msg_safety_allowed_area", StringList("msg_attitude_quaternion_cov", StringList("msg_nav_controller_output", StringList("msg_global_position_int_cov", StringList("msg_local_position_ned_cov", StringList("msg_rc_channels", StringList("msg_request_data_stream", StringList("msg_data_stream", StringList("msg_manual_control", StringList("msg_rc_channels_override", StringList("msg_mission_item_int", StringList("msg_vfr_hud", StringList("msg_command_int", StringList("msg_command_long", StringList("msg_command_ack", StringList("msg_manual_setpoint", StringList("msg_set_attitude_target", StringList("msg_attitude_target", StringList("msg_set_position_target_local_ned", StringList("msg_position_target_local_ned", StringList("msg_set_position_target_global_int", StringList("msg_position_target_global_int", StringList("msg_local_position_ned_system_global_offset", StringList("msg_hil_state", StringList("msg_hil_controls", StringList("msg_hil_rc_inputs_raw", StringList("msg_hil_actuator_controls", StringList("msg_optical_flow", StringList("msg_global_vision_position_estimate", StringList("msg_vision_position_estimate", StringList("msg_vision_speed_estimate", StringList("msg_vicon_position_estimate", StringList("msg_highres_imu", StringList("msg_optical_flow_rad", StringList("msg_hil_sensor", StringList("msg_sim_state", StringList("msg_radio_status", StringList("msg_file_transfer_protocol", StringList("msg_timesync", StringList("msg_camera_trigger", StringList("msg_hil_gps", StringList("msg_hil_optical_flow", StringList("msg_hil_state_quaternion", StringList("msg_scaled_imu2", StringList("msg_log_request_list", StringList("msg_log_entry", StringList("msg_log_request_data", StringList("msg_log_data", StringList("msg_log_erase", StringList("msg_log_request_end", StringList("msg_gps_inject_data", StringList("msg_gps2_raw", StringList("msg_power_status", StringList("msg_serial_control", StringList("msg_gps_rtk", StringList("msg_gps2_rtk", StringList("msg_scaled_imu3", StringList("msg_data_transmission_handshake", StringList("msg_encapsulated_data", StringList("msg_distance_sensor", StringList("msg_terrain_request", StringList("msg_terrain_data", StringList("msg_terrain_check", StringList("msg_terrain_report", StringList("msg_scaled_pressure2", StringList("msg_att_pos_mocap", StringList("msg_set_actuator_control_target", StringList("msg_actuator_control_target", StringList("msg_altitude", StringList("msg_resource_request", StringList("msg_scaled_pressure3", StringList("msg_follow_target", StringList("msg_control_system_state", StringList("msg_battery_status", StringList("msg_autopilot_version", StringList("msg_landing_target", StringList("msg_estimator_status", StringList("msg_wind_cov", StringList("msg_gps_input", StringList("msg_gps_rtcm_data", StringList("msg_high_latency", StringList("msg_vibration", StringList("msg_home_position", StringList("msg_set_home_position", StringList("msg_message_interval", StringList("msg_extended_sys_state", StringList("msg_adsb_vehicle", StringList("msg_collision", StringList("msg_v2_extension", StringList("msg_memory_vect", StringList("msg_debug_vect", StringList("msg_named_value_float", StringList("msg_named_value_int", StringList("msg_statustext", StringList("msg_debug", StringList("msg_setup_signing", StringList("msg_button_change", StringList("msg_play_tune", StringList("msg_camera_information", StringList("msg_camera_settings", StringList("msg_storage_information", StringList("msg_camera_capture_status", StringList("msg_camera_image_captured", StringList("msg_flight_information", StringList("msg_mount_orientation", StringList("msg_logging_data", StringList("msg_logging_data_acked", StringList("msg_logging_ack", NIL))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), IntegerList(0, IntegerList(1, IntegerList(2, IntegerList(4, IntegerList(5, IntegerList(6, IntegerList(7, IntegerList(11, IntegerList(20, IntegerList(21, IntegerList(22, IntegerList(23, IntegerList(24, IntegerList(25, IntegerList(26, IntegerList(27, IntegerList(28, IntegerList(29, IntegerList(30, IntegerList(31, IntegerList(32, IntegerList(33, IntegerList(34, IntegerList(35, IntegerList(36, IntegerList(37, IntegerList(38, IntegerList(39, IntegerList(40, IntegerList(41, IntegerList(42, IntegerList(43, IntegerList(44, IntegerList(45, IntegerList(46, IntegerList(47, IntegerList(48, IntegerList(49, IntegerList(50, IntegerList(51, IntegerList(54, IntegerList(55, IntegerList(61, IntegerList(62, IntegerList(63, IntegerList(64, IntegerList(65, IntegerList(66, IntegerList(67, IntegerList(69, IntegerList(70, IntegerList(73, IntegerList(74, IntegerList(75, IntegerList(76, IntegerList(77, IntegerList(81, IntegerList(82, IntegerList(83, IntegerList(84, IntegerList(85, IntegerList(86, IntegerList(87, IntegerList(89, IntegerList(90, IntegerList(91, IntegerList(92, IntegerList(93, IntegerList(100, IntegerList(101, IntegerList(102, IntegerList(103, IntegerList(104, IntegerList(105, IntegerList(106, IntegerList(107, IntegerList(108, IntegerList(109, IntegerList(110, IntegerList(111, IntegerList(112, IntegerList(113, IntegerList(114, IntegerList(115, IntegerList(116, IntegerList(117, IntegerList(118, IntegerList(119, IntegerList(120, IntegerList(121, IntegerList(122, IntegerList(123, IntegerList(124, IntegerList(125, IntegerList(126, IntegerList(127, IntegerList(128, IntegerList(129, IntegerList(130, IntegerList(131, IntegerList(132, IntegerList(133, IntegerList(134, IntegerList(135, IntegerList(136, IntegerList(137, IntegerList(138, IntegerList(139, IntegerList(140, IntegerList(141, IntegerList(142, IntegerList(143, IntegerList(144, IntegerList(146, IntegerList(147, IntegerList(148, IntegerList(149, IntegerList(230, IntegerList(231, IntegerList(232, IntegerList(233, IntegerList(234, IntegerList(241, IntegerList(242, IntegerList(243, IntegerList(244, IntegerList(245, IntegerList(246, IntegerList(247, IntegerList(248, IntegerList(249, IntegerList(250, IntegerList(251, IntegerList(252, IntegerList(253, IntegerList(254, IntegerList(256, IntegerList(257, IntegerList(258, IntegerList(259, IntegerList(260, IntegerList(261, IntegerList(262, IntegerList(263, IntegerList(264, IntegerList(265, IntegerList(266, IntegerList(267, IntegerList(268, NIL))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), IdList(0, IdList("/home/ankush/Workspace/Drona/Src/Lib/Drivers/PX4Driver/PSrc/MavlinkEnums.p", NIL))),
  DependsOn("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/BootMaster.4ml", "/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PGenerated/POrb.4ml"),
  EnumTypeDef("Topics", StringList("heartbeat_topic", StringList("attitude_topic", StringList("global_position_topic", StringList("local_position_topic", StringList("battery_status_topic", StringList("gps_raw_int_topic", StringList("gps_status_topic", StringList("command_ack_topic", StringList("extended_sys_state_topic", StringList("px4status_topic", StringList("altitude_reached_topic", StringList("geofence_reached_topic", StringList("heartbeat_status_topic", StringList("battery_critical_topic", StringList("gps_health_topic", StringList("vehicle_ready_topic", StringList("vehicle_armed_topic", StringList("vehicle_disarmed_topic", StringList("vehicle_landed_topic", StringList("vehicle_loitering_topic", StringList("vehicle_crashed_topic", NIL))))))))))))))))))))), NIL, IdList(4, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/POrb/POrbHeader.p", NIL))),
  MachineSends("BootMaster", ALL),
  DependsOn("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/BootMaster.4ml", NIL),
  MachineReceives("BootMaster", ALL),
  EventDecl("altitude_reached", AssumeMaxInstances(100), BaseType(BOOL), IdList(11, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("geofence_reached", AssumeMaxInstances(100), BaseType(BOOL), IdList(12, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("battery_critical", AssumeMaxInstances(100), BaseType(INT), IdList(14, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("battery_recharged", AssumeMaxInstances(100), BaseType(INT), IdList(15, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("vehicle_ready", AssumeMaxInstances(100), BaseType(BOOL), IdList(17, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("vehicle_armed", AssumeMaxInstances(100), BaseType(BOOL), IdList(18, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  InterfaceTypeDecl("CommanderInterface", InterfaceType("Command", InterfaceType("command_ack", NIL)), BaseType(MACHINE), IdList(36, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("mission_takeoff", NIL, BaseType(FLOAT), IdList(53, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("vehicle_disarmed", AssumeMaxInstances(100), BaseType(BOOL), IdList(19, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("vehicle_landed", AssumeMaxInstances(100), BaseType(BOOL), IdList(20, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("vehicle_loitering", AssumeMaxInstances(100), BaseType(BOOL), IdList(21, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("vehicle_crashed", AssumeMaxInstances(100), BaseType(BOOL), IdList(22, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("CommandSucceeded", NIL, BaseType(INT), IdList(32, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("CommandFailed", NIL, BaseType(INT), IdList(33, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("SetTargetAltitude", NIL, NmdTupType(NmdTupTypeField("target", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("delta", BaseType(FLOAT)), NIL)), IdList(39, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("extended_sys_state", AssumeMaxInstances(100), NmdTupType(NmdTupTypeField("_vtol_state", BaseType(INT)), NmdTupType(NmdTupTypeField("_landed_state", BaseType(INT)), NIL)), IdList(9, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("command_ack", AssumeMaxInstances(100), NmdTupType(NmdTupTypeField("_command", BaseType(INT)), NmdTupType(NmdTupTypeField("_result", BaseType(INT)), NIL)), IdList(10, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("gps_health_update", AssumeMaxInstances(100), NmdTupType(NmdTupTypeField("locked", BaseType(BOOL)), NmdTupType(NmdTupTypeField("satellites", BaseType(INT)), NmdTupType(NmdTupTypeField("fix_type", BaseType(INT)), NmdTupType(NmdTupTypeField("precision", BaseType(INT)), NIL)))), IdList(16, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("mission_goto", NIL, NmdTupType(NmdTupTypeField("speed", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("x", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("y", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("z", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("yaw", BaseType(FLOAT)), NIL))))), IdList(54, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("heartbeat_status_changed", AssumeMaxInstances(100), NmdTupType(NmdTupTypeField("isAlive", BaseType(BOOL)), NmdTupType(NmdTupTypeField("lastHeartbeat", BaseType(INT)), NIL)), IdList(13, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("attitude", AssumeMaxInstances(100), NmdTupType(NmdTupTypeField("_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField("_roll", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("_pitch", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("_yaw", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("_rollspeed", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("_pitchspeed", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("_yawspeed", BaseType(FLOAT)), NIL))))))), IdList(5, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  InterfaceTypeDecl("BatteryMonitorInterface", InterfaceType("battery_status", NIL), NmdTupType(NmdTupTypeField("orb", BaseType(MACHINE)), NmdTupType(NmdTupTypeField("commander", BaseType(MACHINE)), NIL)), IdList(42, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  InterfaceTypeDecl("GeofenceMonitorInterface", InterfaceType("SetGeofenceRadius", InterfaceType("local_position", NIL)), NmdTupType(NmdTupTypeField("orb", BaseType(MACHINE)), NmdTupType(NmdTupTypeField("commander", BaseType(MACHINE)), NIL)), IdList(45, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  InterfaceTypeDecl("GPSHealthMonitorInterface", InterfaceType("global_position", InterfaceType("gps_raw_int", InterfaceType("gps_status", NIL))), NmdTupType(NmdTupTypeField("orb", BaseType(MACHINE)), NmdTupType(NmdTupTypeField("commander", BaseType(MACHINE)), NIL)), IdList(47, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  InterfaceTypeDecl("HeartbeatMonitorInterface", InterfaceType("heartbeat", NIL), NmdTupType(NmdTupTypeField("orb", BaseType(MACHINE)), NmdTupType(NmdTupTypeField("commander", BaseType(MACHINE)), NIL)), IdList(49, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  InterfaceTypeDecl("FlightControllerInterface", InterfaceType("CommandFailed", InterfaceType("CommandSucceeded", InterfaceType("battery_critical", InterfaceType("battery_recharged", InterfaceType("geofence_reached", InterfaceType("global_position", InterfaceType("gps_health_update", InterfaceType("heartbeat_status_changed", InterfaceType("local_position", InterfaceType("mission_arm", InterfaceType("mission_disarm", InterfaceType("mission_finished", InterfaceType("mission_goto", InterfaceType("mission_land", InterfaceType("mission_loitering", InterfaceType("mission_takeoff", NIL)))))))))))))))), NmdTupType(NmdTupTypeField("orb", BaseType(MACHINE)), NmdTupType(NmdTupTypeField("commander", BaseType(MACHINE)), NIL)), IdList(58, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  InterfaceTypeDecl("AltitudeMonitorInterface", InterfaceType("SetTargetAltitude", InterfaceType("extended_sys_state", InterfaceType("local_position", NIL))), NmdTupType(NmdTupTypeField("orb", BaseType(MACHINE)), NmdTupType(NmdTupTypeField("commander", BaseType(MACHINE)), NIL)), IdList(40, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("SetGeofenceRadius", NIL, NmdTupType(NmdTupTypeField("home", NmdTupType(NmdTupTypeField("x", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("y", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("z", BaseType(FLOAT)), NIL)))), NmdTupType(NmdTupTypeField("radius", BaseType(FLOAT)), NIL)), IdList(44, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("Command", NIL, NmdTupType(NmdTupTypeField("caller", BaseType(MACHINE)), NmdTupType(NmdTupTypeField("confirm", BaseType(BOOL)), NmdTupType(NmdTupTypeField("cmd", BaseType(INT)), NmdTupType(NmdTupTypeField("a1", AnyType(NIL)), NmdTupType(NmdTupTypeField("a2", AnyType(NIL)), NmdTupType(NmdTupTypeField("a3", AnyType(NIL)), NmdTupType(NmdTupTypeField("a4", AnyType(NIL)), NmdTupType(NmdTupTypeField("a5", AnyType(NIL)), NmdTupType(NmdTupTypeField("a6", AnyType(NIL)), NmdTupType(NmdTupTypeField("a7", AnyType(NIL)), NIL)))))))))), IdList(35, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("heartbeat", AssumeMaxInstances(100), NmdTupType(NmdTupTypeField("_custom_mode", BaseType(INT)), NmdTupType(NmdTupTypeField("_type", BaseType(INT)), NmdTupType(NmdTupTypeField("_autopilot", BaseType(INT)), NmdTupType(NmdTupTypeField("_base_mode", BaseType(INT)), NmdTupType(NmdTupTypeField("_system_status", BaseType(INT)), NmdTupType(NmdTupTypeField("_mavlink_version", BaseType(INT)), NIL)))))), IdList(7, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("gps_raw_int", AssumeMaxInstances(100), NmdTupType(NmdTupTypeField("_time_usec", BaseType(INT)), NmdTupType(NmdTupTypeField("_lat", BaseType(INT)), NmdTupType(NmdTupTypeField("_lon", BaseType(INT)), NmdTupType(NmdTupTypeField("_alt", BaseType(INT)), NmdTupType(NmdTupTypeField("_eph", BaseType(INT)), NmdTupType(NmdTupTypeField("_epv", BaseType(INT)), NmdTupType(NmdTupTypeField("_vel", BaseType(INT)), NmdTupType(NmdTupTypeField("_cog", BaseType(INT)), NmdTupType(NmdTupTypeField("_fix_type", BaseType(INT)), NmdTupType(NmdTupTypeField("_satellites_visible", BaseType(INT)), NIL)))))))))), IdList(8, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("battery_status", AssumeMaxInstances(100), NmdTupType(NmdTupTypeField("_current_consumed", BaseType(INT)), NmdTupType(NmdTupTypeField("_energy_consumed", BaseType(INT)), NmdTupType(NmdTupTypeField("_temperature", BaseType(INT)), NmdTupType(NmdTupTypeField("_voltages", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("_current_battery", BaseType(INT)), NmdTupType(NmdTupTypeField("_id", BaseType(INT)), NmdTupType(NmdTupTypeField("_battery_function", BaseType(INT)), NmdTupType(NmdTupTypeField("_type", BaseType(INT)), NmdTupType(NmdTupTypeField("_battery_remaining", BaseType(INT)), NIL))))))))), IdList(4, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("local_position", AssumeMaxInstances(100), NmdTupType(NmdTupTypeField("_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField("_x", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("_y", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("_z", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("_vx", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("_vy", BaseType(FLOAT)), NmdTupType(NmdTupTypeField("_vz", BaseType(FLOAT)), NIL))))))), IdList(3, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  PermEmbeddedInEvent("Command", "vehicle_loitering"),
  PermEmbeddedInEvent("Command", "vehicle_landed"),
  PermEmbeddedInEvent("Command", "vehicle_disarmed"),
  PermEmbeddedInEvent("Command", "gps_status"),
  PermEmbeddedInEvent("Command", "mission_takeoff"),
  PermEmbeddedInEvent("Command", "heartbeat_status_changed"),
  PermEmbeddedInEvent("Command", "extended_sys_state"),
  PermEmbeddedInEvent("Command", "mission_goto"),
  PermEmbeddedInEvent("Command", "SetGeofenceRadius"),
  PermEmbeddedInEvent("Command", "command_ack"),
  PermEmbeddedInEvent("Command", "battery_status"),
  PermEmbeddedInEvent("Command", "Command"),
  PermEmbeddedInEvent("Command", "global_position"),
  PermEmbeddedInEvent("Command", "local_position"),
  PermEmbeddedInEvent("Command", "heartbeat"),
  PermEmbeddedInEvent("Command", "vehicle_ready"),
  PermEmbeddedInEvent("Command", "gps_health_update"),
  PermEmbeddedInEvent("Command", "battery_recharged"),
  PermEmbeddedInEvent("Command", "battery_critical"),
  PermEmbeddedInEvent("Command", "geofence_reached"),
  PermEmbeddedInEvent("Command", "altitude_reached"),
  PermEmbeddedInEvent("Command", "attitude"),
  PermEmbeddedInEvent("Command", "SetTargetAltitude"),
  PermEmbeddedInEvent("Command", "mission_arm"),
  PermEmbeddedInEvent("Command", "mission_disarm"),
  PermEmbeddedInEvent("Command", "mission_land"),
  PermEmbeddedInEvent("Command", "gps_raw_int"),
  PermEmbeddedInEvent("Command", "vehicle_armed"),
  PermEmbeddedInEvent("Command", "POrbPublish"),
  PermEmbeddedInEvent("Command", "POrbSubscribe"),
  PermEmbeddedInEvent("Command", "mission_finished"),
  PermEmbeddedInEvent("Command", "mission_loitering"),
  PermEmbeddedInEvent("Command", "CommandFailed"),
  PermEmbeddedInEvent("Command", "CommandSucceeded"),
  PermEmbeddedInEvent("Command", "vehicle_crashed"),
  MachineProtoDecl("POrbMachine", BaseType(NULL)),
  EventDecl("global_position", AssumeMaxInstances(100), NmdTupType(NmdTupTypeField("_time_boot_ms", BaseType(INT)), NmdTupType(NmdTupTypeField("_lat", BaseType(INT)), NmdTupType(NmdTupTypeField("_lon", BaseType(INT)), NmdTupType(NmdTupTypeField("_alt", BaseType(INT)), NmdTupType(NmdTupTypeField("_relative_alt", BaseType(INT)), NmdTupType(NmdTupTypeField("_vx", BaseType(INT)), NmdTupType(NmdTupTypeField("_vy", BaseType(INT)), NmdTupType(NmdTupTypeField("_vz", BaseType(INT)), NmdTupType(NmdTupTypeField("_hdg", BaseType(INT)), NIL))))))))), IdList(2, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  EventDecl("POrbSubscribe", NIL, NmdTupType(NmdTupTypeField("topic", NameType("Topics")), NmdTupType(NmdTupTypeField("sub", BaseType(MACHINE)), NIL)), IdList(1, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/POrb/POrbHeader.p", NIL))),
  EventDecl("POrbPublish", NIL, NmdTupType(NmdTupTypeField("topic", NameType("Topics")), NmdTupType(NmdTupTypeField("ev", BaseType(EVENT)), NmdTupType(NmdTupTypeField("payload", AnyType(NIL)), NIL))), IdList(3, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/POrb/POrbHeader.p", NIL))),
  EventDecl("gps_status", AssumeMaxInstances(100), NmdTupType(NmdTupTypeField("_satellites_visible", BaseType(INT)), NmdTupType(NmdTupTypeField("_satellite_prn", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("_satellite_used", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("_satellite_elevation", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("_satellite_azimuth", SeqType(BaseType(INT))), NmdTupType(NmdTupTypeField("_satellite_snr", SeqType(BaseType(INT))), NIL)))))), IdList(6, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/PX4API/PX4API.p", NIL))),
  PermEmbeddedInEvent("POrbPublish", "global_position"),
  PermEmbeddedInEvent("POrbSubscribe", "local_position"),
  PermEmbeddedInEvent("POrbPublish", "local_position"),
  PermEmbeddedInEvent("POrbSubscribe", "heartbeat"),
  PermEmbeddedInEvent("POrbPublish", "heartbeat"),
  PermEmbeddedInEvent("POrbSubscribe", "vehicle_ready"),
  PermEmbeddedInEvent("POrbPublish", "vehicle_ready"),
  PermEmbeddedInEvent("POrbSubscribe", "gps_health_update"),
  PermEmbeddedInEvent("POrbPublish", "gps_health_update"),
  PermEmbeddedInEvent("POrbSubscribe", "battery_recharged"),
  PermEmbeddedInEvent("POrbPublish", "battery_recharged"),
  PermEmbeddedInEvent("POrbSubscribe", "battery_critical"),
  PermEmbeddedInEvent("POrbPublish", "battery_critical"),
  PermEmbeddedInEvent("POrbSubscribe", "geofence_reached"),
  PermEmbeddedInEvent("POrbPublish", "geofence_reached"),
  PermEmbeddedInEvent("POrbSubscribe", "altitude_reached"),
  PermEmbeddedInEvent("POrbPublish", "altitude_reached"),
  PermEmbeddedInEvent("POrbSubscribe", "attitude"),
  PermEmbeddedInEvent("POrbPublish", "attitude"),
  PermEmbeddedInEvent("POrbPublish", "heartbeat_status_changed"),
  PermEmbeddedInEvent("POrbSubscribe", "extended_sys_state"),
  PermEmbeddedInEvent("POrbPublish", "extended_sys_state"),
  PermEmbeddedInEvent("POrbSubscribe", "mission_goto"),
  PermEmbeddedInEvent("POrbPublish", "mission_goto"),
  PermEmbeddedInEvent("POrbSubscribe", "SetGeofenceRadius"),
  PermEmbeddedInEvent("POrbPublish", "SetGeofenceRadius"),
  PermEmbeddedInEvent("POrbSubscribe", "command_ack"),
  PermEmbeddedInEvent("POrbPublish", "command_ack"),
  PermEmbeddedInEvent("POrbSubscribe", "battery_status"),
  PermEmbeddedInEvent("POrbPublish", "battery_status"),
  PermEmbeddedInEvent("POrbSubscribe", "Command"),
  PermEmbeddedInEvent("POrbPublish", "Command"),
  PermEmbeddedInEvent("POrbSubscribe", "global_position"),
  PermEmbeddedInEvent("POrbPublish", "CommandSucceeded"),
  PermEmbeddedInEvent("POrbSubscribe", "vehicle_crashed"),
  PermEmbeddedInEvent("POrbPublish", "vehicle_crashed"),
  PermEmbeddedInEvent("POrbSubscribe", "vehicle_loitering"),
  PermEmbeddedInEvent("POrbPublish", "vehicle_loitering"),
  PermEmbeddedInEvent("POrbSubscribe", "vehicle_landed"),
  PermEmbeddedInEvent("POrbPublish", "vehicle_landed"),
  PermEmbeddedInEvent("POrbSubscribe", "vehicle_disarmed"),
  PermEmbeddedInEvent("POrbPublish", "vehicle_disarmed"),
  PermEmbeddedInEvent("POrbSubscribe", "gps_status"),
  PermEmbeddedInEvent("POrbPublish", "gps_status"),
  PermEmbeddedInEvent("POrbSubscribe", "mission_takeoff"),
  PermEmbeddedInEvent("POrbPublish", "mission_takeoff"),
  PermEmbeddedInEvent("POrbSubscribe", "heartbeat_status_changed"),
  PermEmbeddedInEvent("POrbPublish", "POrbPublish"),
  PermEmbeddedInEvent("POrbSubscribe", "POrbSubscribe"),
  PermEmbeddedInEvent("POrbPublish", "POrbSubscribe"),
  FunProtoDecl("Subscribe", NmdTupType(NmdTupTypeField("orb", BaseType(MACHINE)), NmdTupType(NmdTupTypeField("payload", NmdTupType(NmdTupTypeField("topic", NameType("Topics")), NmdTupType(NmdTupTypeField("sub", BaseType(MACHINE)), NIL))), NIL)), NIL),
  PermEmbeddedInEvent("POrbSubscribe", "mission_finished"),
  PermEmbeddedInEvent("POrbPublish", "mission_finished"),
  PermEmbeddedInEvent("POrbSubscribe", "mission_loitering"),
  PermEmbeddedInEvent("POrbPublish", "mission_loitering"),
  PermEmbeddedInEvent("POrbSubscribe", "CommandFailed"),
  PermEmbeddedInEvent("POrbPublish", "CommandFailed"),
  PermEmbeddedInEvent("POrbSubscribe", "CommandSucceeded"),
  PermEmbeddedInEvent("POrbPublish", "mission_disarm"),
  PermEmbeddedInEvent("POrbSubscribe", "mission_land"),
  PermEmbeddedInEvent("POrbPublish", "mission_land"),
  PermEmbeddedInEvent("POrbSubscribe", "gps_raw_int"),
  PermEmbeddedInEvent("POrbPublish", "gps_raw_int"),
  PermEmbeddedInEvent("POrbSubscribe", "vehicle_armed"),
  PermEmbeddedInEvent("POrbPublish", "vehicle_armed"),
  PermEmbeddedInEvent("POrbSubscribe", "POrbPublish"),
  PermEmbeddedInEvent("POrbSubscribe", "SetTargetAltitude"),
  PermEmbeddedInEvent("POrbPublish", "SetTargetAltitude"),
  PermEmbeddedInEvent("POrbSubscribe", "mission_arm"),
  PermEmbeddedInEvent("POrbPublish", "mission_arm"),
  PermEmbeddedInEvent("POrbSubscribe", "mission_disarm"),
  FunProtoDecl("Publish", NmdTupType(NmdTupTypeField("orb", BaseType(MACHINE)), NmdTupType(NmdTupTypeField("payload", NmdTupType(NmdTupTypeField("topic", NameType("Topics")), NmdTupType(NmdTupTypeField("ev", BaseType(EVENT)), NmdTupType(NmdTupTypeField("payload", AnyType(NIL)), NIL)))), NIL)), NIL),
  EventSet("P_GEND_EVENTSET", NIL),
  MachineCreatesM("BootMaster", "POrbMachine"),
  MachineProtoDecl("BootMaster", BaseType(NULL)),
  MachineDecl("BootMaster", BaseType(NULL), IdList(4, IdList("/home/ankush/Workspace/Drona/Src/TrustedSoftwareStack/PSrc/BootMaster.p", NIL))).
}

